# Workflow for deploying Docusaurus site to GitHub Pages
name: Deploy Docusaurus to Pages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main'
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
          
      - name: Setup pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: |
          pnpm install
          echo "### 📦 Dependencies Installation" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependencies installed successfully" >> $GITHUB_STEP_SUMMARY
        
      - name: Build Docusaurus site
        run: |
          echo "### 🏗️ Building Documentation Site" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${{ github.event.inputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if pnpm exec nx build huckleberry-docs; then
            echo "✅ Documentation site built successfully" >> $GITHUB_STEP_SUMMARY
            
            # Get build statistics
            PAGES_COUNT=$(find apps/huckleberry-docs/build -type f -name "*.html" | wc -l)
            echo "📊 Build Statistics:" >> $GITHUB_STEP_SUMMARY
            echo "- Total Pages: $PAGES_COUNT" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Documentation build failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
        env:
          GITHUB_ACTIONS: 'true'
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'apps/huckleberry-docs/build'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        if: always()
        run: |
          echo "## 📘 Documentation Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Step | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependencies Installation | ${{ job.steps['Install dependencies'].outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Documentation Build | ${{ job.steps['Build Docusaurus site'].outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Pages Configuration | ${{ job.steps['Setup Pages'].outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Artifact Upload | ${{ job.steps['Upload artifact'].outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Deployment | ${{ job.steps['Deploy to GitHub Pages'].outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ job.steps['Deploy to GitHub Pages'].outcome }}" == "success" ]]; then
            echo "🌐 **Site URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          fi
